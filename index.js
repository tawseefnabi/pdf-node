#!/usr/bin/env node

const pdf = require('html-pdf');
const Handlebars = require('handlebars');
const handleError = require('cli-error-handler');

function addNewPage() {
	return '<div style="page-break-after: always;"></div>';
}

function generatePDF(doc) {
	return new Promise((resolve, reject) => {
		if (!doc || !doc.html || !doc.data) {
			reject(new Error('Some, or all, options are missing.'));
		}
		if (doc.type === 'pdf') {
			// Create PDF from html template generated by handlebars
			let html = Handlebars.compile(doc.html)(doc.data);

			// Check if buffer output is requested
			if (doc.buffer === true) {
				// Output will be PDF buffer (useful for APIs/web services)
				pdf.create(html).toBuffer(function (err, buffer) {
					if (err) handleError('error in creating buffer', err);
					console.log(
						'PDF buffer generated, size:',
						buffer.length,
						'bytes'
					);
					resolve({
						buffer: buffer,
						size: buffer.length,
						type: 'application/pdf'
					});
				});
			} else {
				// Output will be PDF file (default behavior)
				if (!doc.path) {
					reject(
						new Error(
							'Path is required when buffer option is not set to true.'
						)
					);
					return;
				}
				let filepath = doc.path;
				pdf.create(html).toFile(filepath, function (err, res) {
					if (err) handleError('error in creating file', err);
					console.log('file generated:', res.filename);
					resolve(res);
				});
			}
		} else {
			reject('only pdf file type supported');
		}
	});
}

module.exports = {
	generatePDF,
	addNewPage
};
